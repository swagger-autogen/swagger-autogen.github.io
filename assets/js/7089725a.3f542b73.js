"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[269],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=l(n),g=r,m=c["".concat(i,".").concat(g)]||c[g]||d[g]||o;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=g;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[c]="string"==typeof e?e:r,s[1]=u;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),o=n(6010),s=n(2466),u=n(6550),i=n(1980),l=n(7392),p=n(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,u.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[s,u]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,l]=m({queryString:n,groupId:a}),[c,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=i??c;return g({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);u(e),l(e),f(e)}),[l,f,o]),tabValues:o}}var b=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:u,selectValue:i,tabValues:l}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=l[n].value;a!==u&&(c(t),i(a))},g=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>p.push(e),onKeyDown:g,onClick:d},s,{className:(0,o.Z)("tabs__item",h.tabItem,s?.className,{"tabs__item--active":u===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function j(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(j,(0,a.Z)({key:String(t)},e))}},2518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>u,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),s=n(5162);const u={id:"advanced-usage",title:"Advanced Usage",sidebar_position:2},i=void 0,l={unversionedId:"getting-started/advanced-usage",id:"getting-started/advanced-usage",title:"Advanced Usage",description:"Swagger 2.0:",source:"@site/docs/getting-started/advanced-usage.md",sourceDirName:"getting-started",slug:"/getting-started/advanced-usage",permalink:"/docs/getting-started/advanced-usage",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"advanced-usage",title:"Advanced Usage",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/docs/getting-started/quick-start"},next:{title:"Options",permalink:"/docs/options"}},p={},c=[{value:"Swagger 2.0:",id:"swagger-20",level:2},{value:"OpenAPI 3.x:",id:"openapi-3x",level:2},{value:"Building documentation at project startup",id:"building-documentation-at-project-startup",level:2}],d={toc:c},g="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{style:{textAlign:"justify"}},(0,r.kt)("p",null,"This section shows how to implement swagger-autogen in your project using advanced options. The code below must be inserted in a separate file (e.g ",(0,r.kt)("em",{parentName:"p"},"swagger.js"),"):")),(0,r.kt)("h2",{id:"swagger-20"},"Swagger 2.0:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"commonjs",label:"CommonJs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"const swaggerAutogen = require('swagger-autogen')();\n\nconst doc = {\n  info: {\n    version: '',            // by default: '1.0.0'\n    title: '',              // by default: 'REST API'\n    description: ''         // by default: ''\n  },\n  host: '',                 // by default: 'localhost:3000'\n  basePath: '',             // by default: '/'\n  schemes: [],              // by default: ['http']\n  consumes: [],             // by default: ['application/json']\n  produces: [],             // by default: ['application/json']\n  tags: [                   // by default: empty Array\n    {\n      name: '',             // Tag name\n      description: ''       // Tag description\n    },\n    // { ... }\n  ],\n  securityDefinitions: {},  // by default: empty object\n  definitions: {}           // by default: empty object\n};\n\nconst outputFile = './swagger-output.json';\nconst routes = ['./path/userRoutes.js', './path/bookRoutes.js'];\n\n/* NOTE: If you are using the express Router, you must pass in the 'routes' only the \nroot file where the route starts, such as index.js, app.js, routes.js, etc ... */\n\nswaggerAutogen(outputFile, routes, doc);\n"))),(0,r.kt)(s.Z,{value:"esmodules",label:"ES Modules",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"import swaggerAutogen from 'swagger-autogen';\n\nconst doc = {\n  info: {\n    version: '',            // by default: '1.0.0'\n    title: '',              // by default: 'REST API'\n    description: ''         // by default: ''\n  },\n  host: '',                 // by default: 'localhost:3000'\n  basePath: '',             // by default: '/'\n  schemes: [],              // by default: ['http']\n  consumes: [],             // by default: ['application/json']\n  produces: [],             // by default: ['application/json']\n  tags: [                   // by default: empty Array\n    {\n      name: '',             // Tag name\n      description: ''       // Tag description\n    },\n    // { ... }\n  ],\n  securityDefinitions: {},  // by default: empty object\n  definitions: {}           // by default: empty object\n};\n\nconst outputFile = './swagger-output.json';\nconst routes = ['./path/userRoutes.js', './path/bookRoutes.js'];\n\n/* NOTE: If you are using the express Router, you must pass in the 'routes' only the \nroot file where the route starts, such as index.js, app.js, routes.js, etc ... */\n\nswaggerAutogen()(outputFile, routes, doc);\n")))),(0,r.kt)("h2",{id:"openapi-3x"},"OpenAPI 3.x:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"commonjs",label:"CommonJs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"const swaggerAutogen = require('swagger-autogen')({openapi: '3.0.0'});\n\nconst doc = {\n  info: {\n    version: '',            // by default: '1.0.0'\n    title: '',              // by default: 'REST API'\n    description: ''         // by default: ''\n  },\n  servers: [\n    {\n      url: '',              // by default: 'http://localhost:3000'\n      description: ''       // by default: ''\n    },\n    // { ... }\n  ],\n  tags: [                   // by default: empty Array\n    {\n      name: '',             // Tag name\n      description: ''       // Tag description\n    },\n    // { ... }\n  ],\n  components: {}            // by default: empty object\n};\n\nconst outputFile = './swagger-output.json';\nconst routes = ['./path/userRoutes.js', './path/bookRoutes.js'];\n\n/* NOTE: If you are using the express Router, you must pass in the 'routes' only the \nroot file where the route starts, such as index.js, app.js, routes.js, etc ... */\n\nswaggerAutogen(outputFile, routes, doc);\n"))),(0,r.kt)(s.Z,{value:"esmodules",label:"ES Modules",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"import swaggerAutogen from 'swagger-autogen';\n\nconst doc = {\n  info: {\n    version: '',            // by default: '1.0.0'\n    title: '',              // by default: 'REST API'\n    description: ''         // by default: ''\n  },\n  servers: [\n    {\n      url: '',              // by default: 'http://localhost:3000'\n      description: ''       // by default: ''\n    },\n    // { ... }\n  ],\n  tags: [                   // by default: empty Array\n    {\n      name: '',             // Tag name\n      description: ''       // Tag description\n    },\n    // { ... }\n  ],\n  components: {}            // by default: empty object\n};\n\nconst outputFile = './swagger-output.json';\nconst routes = ['./path/userRoutes.js', './path/bookRoutes.js'];\n\n/* NOTE: If you are using the express Router, you must pass in the 'routes' only the \nroot file where the route starts, such as index.js, app.js, routes.js, etc ... */\n\nswaggerAutogen({openapi: '3.0.0'})(outputFile, routes, doc);\n")))),(0,r.kt)("div",{style:{textAlign:"justify"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"outputFile:")," (",(0,r.kt)("em",{parentName:"p"},"Required"),"). Output file. It will be the file generated by the module containing the documentation in the format identified by Swagger."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"routes:")," (",(0,r.kt)("em",{parentName:"p"},"Required"),"). If you are using the express Router, you must pass in the 'routes' only the root file where the route starts, such as index.js, app.js, routes.js, etc. Otherwise, these are the files that contain methods such as ",(0,r.kt)("em",{parentName:"p"},"get"),", ",(0,r.kt)("em",{parentName:"p"},"post"),", ",(0,r.kt)("em",{parentName:"p"},"put"),", ",(0,r.kt)("em",{parentName:"p"},"use"),", and so on, for example: ",(0,r.kt)("inlineCode",{parentName:"p"},"route.use('/v1', ...)")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"app.get('/path', ...)"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"doc:")," (",(0,r.kt)("em",{parentName:"p"},"Not Required"),"). An object containing the documentation details. If not informed, or if any object parameter is missing, the default values \u200b\u200bwill be used.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Main function signature"',title:'"Main',function:!0,'signature"':!0},"const swaggerAutogen: (outputFile: <string>, routes: <string[]>, data: <object>) => Promise <any>\n")),(0,r.kt)("p",null,"To build the documentation, add the following script in your project's ",(0,r.kt)("strong",{parentName:"p"},"package.json")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'  ...\n  "scripts": {\n    ...\n    "swagger": "node ./swagger.js"\n  }\n')),(0,r.kt)("p",null,"And run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run swagger\n")),(0,r.kt)("h2",{id:"building-documentation-at-project-startup"},"Building documentation at project startup"),(0,r.kt)("div",{style:{textAlign:"justify"}},(0,r.kt)("p",null,"To build the documentation before the project starts and immediately start it, rewrite the ",(0,r.kt)("inlineCode",{parentName:"p"},"swaggerAutogen(...)")," function in your ",(0,r.kt)("strong",{parentName:"p"},"swagger.js")," file as follows:")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"commonjs",label:"CommonJs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"swaggerAutogen(outputFile, routes, doc).then(() => {\n  require('./index.js'); // Your project's root file\n});\n"))),(0,r.kt)(s.Z,{value:"esmodules",label:"ES Modules",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="swagger.js"',title:'"swagger.js"'},"swaggerAutogen()(outputFile, routes, doc).then(async () => {\n  await import('./index.js'); // Your project's root file\n});\n")))),(0,r.kt)("div",{style:{textAlign:"justify"}},(0,r.kt)("p",null,"Where ",(0,r.kt)("strong",{parentName:"p"},"index.js")," is your project's root file. Change the ",(0,r.kt)("strong",{parentName:"p"},"start")," script in your project's ",(0,r.kt)("strong",{parentName:"p"},"package.json")," to look at the ",(0,r.kt)("strong",{parentName:"p"},"swagger.js")," file. If you are using Visual Studio Code, change the reference in your ",(0,r.kt)("strong",{parentName:"p"},"launch.json")," file in the same way. Now, just run your project as usual. Thus the documentation will be generated automatically as soon as the project start."),(0,r.kt)("p",null,"See: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/davibaltar/example-swagger-autogen-with-router"},"Advanced Example"))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("div",{style:{textAlign:"justify"}},(0,r.kt)("p",{parentName:"admonition"},"This module is independent of any framework, but for the recognition to be ",(0,r.kt)("strong",{parentName:"p"},"automatic"),", your framework must follow the ",(0,r.kt)("em",{parentName:"p"},'"Express"')," pattern, such as ",(0,r.kt)("strong",{parentName:"p"},"foo.method(path, callback)"),", where ",(0,r.kt)("em",{parentName:"p"},"foo")," is the variable belonging to the server or route, such as ",(0,r.kt)("em",{parentName:"p"},"app"),", ",(0,r.kt)("em",{parentName:"p"},"server"),", ",(0,r.kt)("em",{parentName:"p"},"route"),", etc. The ",(0,r.kt)("em",{parentName:"p"},"method")," refers to HTTP methods, such as ",(0,r.kt)("em",{parentName:"p"},"get"),", ",(0,r.kt)("em",{parentName:"p"},"post"),", ",(0,r.kt)("em",{parentName:"p"},"put"),", use and so on. If the ",(0,r.kt)("strong",{parentName:"p"},"foo.method(path, callback)")," pattern is not found in the files, it will be necessary to ",(0,r.kt)("strong",{parentName:"p"},"manually")," enter the beginning and end of the endpoint using the ",(0,r.kt)("inlineCode",{parentName:"p"},"#swagger.start")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"#swagger.end")," (see the section ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/docs/endpoints/forced-endpoint-creation"},"Forced Endpoint Creation"))," for more details)."))))}m.isMDXComponent=!0}}]);